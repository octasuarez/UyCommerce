@model DashboardVM
@{
    Layout = "AdminLayout";
}


<body>

    <div class="container-fluid" style="padding-right:10%;">
        <h5 class="my-5 text-center">Dashboard</h5>

        <div class="mx-auto col-12" style="">
            <div class="">
                <form class="d-flex align-items-center justify-content-center" method="get" asp-action="Dashboard">

                    <h6 class="mb-0 me-1">Desde:</h6>
                    <input class="me-5 card p-2" type="date" name="fchDesde" value="@Model.FechaDesde.ToString("yyyy-MM-dd")" max="@DateTime.Today.ToString("yyyy-MM-dd")" />

                    <h6 class="mb-0 me-1">Hasta:</h6>
                    <input class="card p-2" type="date" name="fchHasta" value="@DateTime.Today.ToString("yyyy-MM-dd")" max="@DateTime.Today.ToString("yyyy-MM-dd")" />

                </form>

            </div>

            <div class="d-flex">
                <div class="border card my-3 col-8">
                    <canvas class="m-3" id="myChart"></canvas>
                </div>

                <div class="col-4 p-3">

                    <div class="d-flex">
                        <div class="card col-6 mx-2">
                            <div class="card-body text-center">
                                <p>Total Ordenes:</p>
                                <p class="text-center m-0 fw-bold fs-5">@Model.CantidadVentas</p>
                            </div>

                        </div>

                        <div class="card col-6">
                            <div class="card-body text-center">
                                <p>Total Ganancias:</p>
                                <p class="text-center m-0 fw-bold fs-5">$@Model.Total</p>
                            </div>
                        </div>
                    </div>
                       
                    

                    <div class="card col-6 m-2">
                        <div class="card-body text-center">
                            <p>Ordenes por entregar:</p>
                            <p class="text-center m-0 fw-bold fs-5">@Model.Ordenes.Where(o => o.Estado != "Entregado").Count()</p>
                        </div>
                    </div>


                    <div class="card col-12 m-2">
                        <div class="card-body">
                            <canvas class="m-3" id="myChart2"></canvas>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-12 mx-auto card">

            <h5 class="text-center my-4">Productos Vendidos</h5>

            <table class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th>Nombre</th>
                        <th>Sku</th>
                        <th>Precio</th>
                        <th>Cantidad</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var p in Model.Productos) {
                    <tr>
                        <td><img src="~/Imagenes/Productos/@p.Sku.Imagenes.First().ImagenNombre" style="height:50px;" /></td>
                        <td><a class="link-dark" target="_blank" href="/@p.SkuId">@p.Nombre</a></td>
                        <td>@p.Sku.Key</td>
                        <td>$@p.Precio</td>
                        <td>@p.Cantidad</td>
                    </tr>
                        }
                </tbody>
            </table>

        </div>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
    $(document).ready(function () {

        var list = '@Html.Raw(Json.Serialize(Model.PuntosVentas))'
    console.log(list)

    })
    </script>

    <script>const ctx = document.getElementById('myChart');


    new Chart(ctx, {
        type: 'line',
        data: {
            datasets: [{
                label: 'Cantidad ventas',
                //data: [{ x: 'March', y: 20 }, { x: 'April', y: 10 }, { x: 'May', y: 5 },]
                data: JSON.parse('@Html.Raw(Json.Serialize(Model.PuntosVentas))')
            }]
        },
        options: {
            scales: {
                y: {
                    max: 10,
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });</script>

    <script>const ctx2 = document.getElementById('myChart2');


    new Chart(ctx2, {
        type: 'bar',
        data: {
            datasets: [{
                label: 'Ganancias',
                //data: [{ x: 'March', y: 20 }, { x: 'April', y: 10 }, { x: 'May', y: 5 },]
                data: JSON.parse('@Html.Raw(Json.Serialize(Model.PuntosGanacias))'),
                backgroundColor: 'lightgreen'
            }]
        },
        options: {
            scales: {
                y: {
                    //max: ,
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });</script>

    <script>$('form input').change(function () {
            $(this).closest('form').submit();
        });</script>

</body>
