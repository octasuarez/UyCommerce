@model Carrito

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PayPal JS SDK Standard Integration</title>
</head>

<body>
    <div class="container-fluid" style="background-color:whitesmoke;">


        <script src="https://www.paypal.com/sdk/js?client-id=Ab3oHLrxl1Go9442dLDXSZTUtPQC-HPiO5LAPZrDvSFxu2ONgG8pjKmpUcq7goOJRUVp7VaXPWJ_svGU"></script>

        <div class="container d-flex flex-column" style="min-height:900px;">

            <div class="my-4">
                <h2>Mi Carrito (@Model.Productos.Count items)</h2>
            </div>

            <div class="mt-2 w-100 h-100 d-lg-flex">

                <div class=" col-lg-8 h-100 p-3 me-2" style="border-radius:10px 10px 10px 10px;background-color:white;">

                    <h4 class="fw-semibold">Productos</h4>
                    <div class="border my-4"></div>
                    <div>
                        @foreach (var p in Model.Productos)
                        {
                            <div class="p-2 d-lg-flex">

                                    <img class="object-fit-contain" src="~/Imagenes/Productos/@p.Sku.Imagenes!.First().ImagenNombre" style="height:150px;width:150px;" />

                                    <div class="d-flex flex-column col-8 ps-3">
                                        <a href="/@p.Sku.Key" class="text-dark fs-4">@p.Sku.Nombre</a>
                                        <div class="d-flex">

                                            @foreach (var a in p.Sku.AtributosValores!)
                                            {
                                                <p class="me-2"><strong>@a.Atributo!.Nombre:</strong> @a.Valor</p>
                                            }
                                        </div>

                                        <div class="d-flex align-items-center">
                                            <div class="qty-btn me-2 me-lg-0 d-flex flex-nowrap w-auto" style="">
                                                <button data-value="@p.SkuId" data-qty=-1 onclick="ModificarQty(this)" style="color:red;">-</button>
                                                <input id="@p.SkuId" disabled type="number" value="@p.Cantidad" readonly="readonly">
                                                <button data-value="@p.SkuId" data-qty=1 onclick="ModificarQty(this)" style="color: green;">+</button>
                                            </div>
                                            <button data-value="@p.SkuId" onclick="EliminarProductoCarrito(this)" class="btn"><i class="bi bi-trash3 fs-5" style="color:gray;"></i></button>
                                        </div>
                                    </div>

                                    <div class="col-lg-2 position-relative position-lg-static me-5 me-lg-0">
                                        <h4 class="text-center fw-semibold">$@p.Sku.Precio</h4>
                                    </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="mt-5 mt-lg-0 w-100 pt-3" style="border-radius:10px 10px 10px 10px;background-color:white;">
                    <div>
                        <h3 class="text-center mb-4 fw-bold">Resumen</h3>
                        <ul class="list-unstyled w-100">

                            @foreach (var p in Model.Productos)
                            {
                                <li class="px-3 py-1 fs-5 d-flex">
                                    <p> @p.Sku!.Nombre x @p.Cantidad</p>
                                    <p class="ms-auto fw-bold">$@(p.Sku.Precio * p.Cantidad)</p>
                                </li>
                            }
                        </ul>
                        <h4 class="text-center"><strong>Total:</strong> $@Model.GetTotal()</h4>
                    </div>

                    <div class="border mx-3 my-3"></div>
                    <h3 class="text-center fw-bold">Pagar</h3>
                    <div class="p-3" id="paypal-button-container"></div>
                </div>

                <p id="result-message"></p>
            </div>

        </div>

    </div>

    <script>paypal.Buttons({
            async createOrder() {
                try {
                    const response = await fetch("/create-paypal-order", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                    });

                    const orderData = await response.json();

                    if (orderData.id) {
                        return orderData.id;
                    } else {
                        const errorDetail = orderData?.details?.[0];
                        const errorMessage = errorDetail
                            ? `${errorDetail.issue} ${errorDetail.description} (${orderData.debug_id})`
                            : JSON.stringify(orderData);

                        throw new Error(errorMessage);
                    }
                } catch (error) {
                    console.error(error);
                    resultMessage(`Could not initiate PayPal Checkout...<br><br>${error}`);
                }
            },
            async onApprove(data, actions) {
                try {
                    const response = await fetch(`/orders/${data.orderID}/capture`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                    });

                    const orderData = await response.json();

                    console.log(orderData?.details?.[0]);

                    const errorDetail = orderData?.details?.[0];

                    if (errorDetail?.issue === "INSTRUMENT_DECLINED") {
                        // (1) Recoverable INSTRUMENT_DECLINED -> call actions.restart()
                        // recoverable state, per https://developer.paypal.com/docs/checkout/standard/customize/handle-funding-failures/
                        return actions.restart();
                    } else if (errorDetail) {
                        resultMessage("No se pudo completar la transaccion")
                    } else if (!orderData.purchase_units) {
                        throw new Error(JSON.stringify(orderData));
                    } else {
                        // (3) Successful transaction
                        console.log(
                            "Capture result",
                            orderData,
                            JSON.stringify(orderData, null, 2),
                        );

                        window.location.href = `/Compras/${orderData.id}`;
                    }
                } catch (error) {
                    console.error(error);
                    resultMessage(
                        `Sorry, your transaction could not be processed...<br><br>${error}`,
                    );
                }
            },

        }).render('#paypal-button-container');

        function resultMessage(message) {
            const container = document.querySelector("#result-message");
            container.innerHTML = message;
        }</script>

    <script>
        function ModificarQty(e) {

        let formData = {
                skuId: e.getAttribute('data-value'),
                quantity: e.getAttribute('data-qty')
            }
            console.log(formData)
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AgregarProductoAlCarrito", "Carrito")',
                data: formData,
                success: function (response) {
                    location.reload();
                }

            })
        }
    </script>
    <script>
        function EliminarProductoCarrito(e) {

        let formData = {
                skuId: e.getAttribute('data-value'),
            }
            console.log(formData)
            $.ajax({
                type: 'POST',
                url: '@Url.Action("EliminarProductoCarrito", "Carrito")',
                data: formData,
                success: function (response) {
                    location.reload();
                }

            })
        }
    </script>
</body>
</html>