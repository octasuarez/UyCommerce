@model VerProductoVM

<body>

    <div class="container">
        @*Imagenes del producto*@

        <div class="d-flex row col-12 mt-5">
            <div class="col-6">
                <img id="imgmain" class="magniflier object-fit-contain" style="height:500px;width:500px;" src="~/Imagenes/Productos/@Model.Sku.Imagenes!.ElementAt(0).ImagenNombre" />

                <ul class="list-unstyled d-flex">
                    <li class="me-2">
                        <img onmouseover="cambiarImagen(this)"
                             class="object-fit-contain active-img" style="height:100px;width:100px;" src="~/Imagenes/Productos/@Model.Sku.Imagenes!.ElementAt(0).ImagenNombre" />
                    </li>
                    @if (Model.Sku.Imagenes!.Count > 1)
                    {
                        for (int i = 1; i < Model.Sku.Imagenes!.Count; i++)
                        {
                            <li class="me-2">
                                <img onmouseover="cambiarImagen(this)"
                                     class="object-fit-contain" style="height:100px;width:100px;" src="~/Imagenes/Productos/@Model.Sku.Imagenes!.ElementAt(i).ImagenNombre" />
                            </li>

                        }
                    }
                </ul>

                <div class="d-flex">


                </div>

            </div>

            @*Detalles del producto y sus atributos*@

            <div class="col-6 border p-3 ">
                <h1>@Model.Sku.Producto.Nombre</h1>
                @if (Model.Sku != null)
                {
                    <h3>Precio $@Model.Sku.Precio</h3>
                }
                else
                {
                    <h3>Precio $@Model.Sku!.Precio</h3>
                }
                <p>In vel eros ornare, ultrices justo sit amet, condimentum tortor. Cras quis arcu libero. Integer dictum sapien ac faucibus gravida. Vivamus in nisl malesuada dui volutpat dignissim sit amet a nisl. Fusce molestie lorem ac elit sagittis, non scelerisque augue tempus. Suspendisse eu augue rutrum, convallis mi sit amet</p>

                <div class="mb-5">
                    @for (int i = 0; i < Model.Opciones!.Count(); i++)
                    {
                        <select class="form-select" name="@Model.Opciones.ElementAt(i).Key.Nombre" id="@i" onchange="cambioAtributo(this)">

                            @foreach (var atributo in Model.Opciones.ElementAt(i))
                            {
                                if (Model.Sku.AtributosValores!.Contains(atributo))
                                {
                                    <option value="@atributo.Valor" selected>@atributo.Valor</option>
                                }
                                else
                                {
                                    <option value="@atributo.Valor">@atributo.Valor</option>
                                }
                            }
                        </select>
                    }
                </div>

                @if (Model.Sku != null)
                {
                    <div class="form-row ">

                        <div class="form-row input-group">
                            <div class="input-grpup-prepend col-2">
                                <input class="form-control text-center fs-5 fw-semibold py-2" type="number" inputmode="numeric" min="1" required value="1" />
                            </div>
                            <button value="@Model.Sku.Id" onclick="AgregarProductoAlCarrito(this)" class="fs-5 form-control btn btn-primary py-2 fw-semibold mb-2">Agregar al Carrito</button>
                        </div>

                        <form method="post" action="@Url.Action("ComprarProducto","PagosController")">
                            <input name="skuId" type="number" hidden value="@Model.Sku.Id" />
                            <button type="submit" class="form-control btn btn-primary py-2 fw-semibold fs-5">Comprar</button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="form-row">
                        <div class="form-row input-group">
                            <div class="input-grpup-prepend col-2">
                                <input class="form-control text-center fs-5 fw-semibold py-2" type="number" inputmode="numeric" min="1" required value="1" />
                            </div>
                            <button disabled onclick="AgregarProductoAlCarrito(this)" class="fs-5 form-control btn btn-primary py-2 fw-semibold mb-2">Agregar al Carrito</button>
                        </div>
                        <button disabled type="submit" class="form-control btn btn-primary py-2 fw-semibold fs-5">Comprar</button>
                    </div>
                }

            </div>
        </div>

        @* Descripcion del producto *@

        <div class="mt-5 mb-5">
            <h3 class="text-center">Descripcion</h3>
            <span>@Model.Sku.Producto.Descripcion</span>
        </div>

        @* Preguntas *@
        <div class="mt-5">

            <h3 class="text-center">Preguntas</h3>

            <h5>@Model.Sku.Producto.Preguntas.Count preguntas</h5>

            <div class="row mb-4 mt-3">
                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <input id="txtPregunta" class="form-control form-control-lg w-50 me-2" type="text" placeholder="Escribe tu pregunta..." />
                    <button onclick="AgregarPregunta()" class="btn btn-primary col-auto">Preguntar</button>
                }
                else
                {
                    <input disabled id="txtPregunta" class="form-control form-control-lg w-50 me-2" type="text" placeholder="Escribe tu pregunta..."
                           title="Inicia sesion para poder agregar una pregunta" />
                    <button disabled onclick="AgregarPregunta()" class="btn btn-primary col-auto">Preguntar</button>
                }
            </div>

            <div id="Preguntas">

                @if (Model.Sku.Producto.Preguntas != null && Model.Sku.Producto.Preguntas.Any())
                {
                    foreach (var p in Model.Sku.Producto.Preguntas)
                    {
                        <h5>@p.Usuario.Nombre</h5>
                        <p>@p.Contenido</p>
                        <p class="fs-6 fw-lighter"> Publicado el @p.Fecha</p>

                        if (p.Respuesta != null)
                        {
                            <p>@p.Respuesta.Contenido</p>
                        }
                    }
                }
                else
                {
                    <h5>No hay preguntas todavia.</h5>
                }

            </div>

        </div>

        @* La lista de productos relacionados *@
        <!--<div>
                <h3 class="text-center">Productos Relacionados</h3>
                <div class="d-flex mt-5">-->
        @*@foreach (var p in Model.ProductosRelacionados!)
            {
                <div class="card me-3" style="width: 300px;">

                    <img class="card-img-top object-fit-contain" style="height:300px;" src="~/Imagenes/Productos/@p.Imagenes!.ElementAt(0).ImagenNombre" alt="Producto">
                    <div class="card-body">
                        <a href="/@p.NombreClave" class="text-decoration-none text-reset">
                            <h3 class="card-title">@p.Nombre</h3>
                            <h5 class="card-text">$@p.Skus!.First().Precio</h5>
                        </a>
                        <button class="btn btn-primary">Add to cart</button>
                    </div>
                </div>
            }*@
        <!--</div>
        </div>-->

    </div>


    <script>function cambioAtributo(e) {
                    var url = "/@Model.Sku.Producto.NombreClave";
                    if (e.id == 0) {
                        window.location.href = (url + `-${e.value}`).toLowerCase();

                    } else {
                    let selects = e.parentElement.children;

                    for (i = 0; i < selects.length; i++) {
                        url = url + "-" + selects[i].value;
                    }
                    window.location.href = url.toLowerCase();
                    }
            }</script>

    <script>
    function AgregarProductoAlCarrito(e) {


        if ("@Model.Sku" != null) {
            let formData = {
                skuId: e.value,
                quantity: 1
            }
            console.log(formData)
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AgregarProductoAlCarrito", "Carrito")',
                data: formData,
                success: function (response) {
                    alert("Se agrego el producto al Carrito de manera exitosa");
                }

            })
        }
    }
    </script>

    <script>
    function AgregarPregunta() {

        var preguntaTxt = document.getElementById('txtPregunta');

        console.log(preguntaTxt.value);
        console.log(@Model.Producto.Id);

        var formData =
        {
            Contenido: preguntaTxt.value, ProductoId: @Model.Producto.Id
        };

        console.log(formData)

        $.ajax({

            type: 'POST',
            url: '/Usuario/AgregarPregunta',
            data: formData,
            success: function (response) {
                console.log(response)

                preguntas = document.getElementById('Preguntas');

                preguntas.innerHTML =

                    `<h5>${response.nombreUsuario}</h5>
                 <p>${response.contenido}</p>` + preguntas.innerHTML;
            },
            error: function (response) {

                console.log(response)

            }


        })

    }

    </script>
    <script>function cambiarImagen(e) {

            var imgmain = document.getElementById("imgmain");
            imgmain.src = e.src;
            document.querySelector('.active-img').classList.remove('active-img');
            console.log(document.querySelector('.active-img'))
            e.classList.add('active-img')


        }</script>

    <script type="text/javascript">$(document).ready(function () {

            var native_width = 0;
            var native_height = 0;
            var mouse = { x: 0, y: 0 };
            var magnify;
            var cur_img;

            var ui = {
                magniflier: $('.magniflier')
            };

            // Add the magnifying glass
            if (ui.magniflier.length) {
                var div = document.createElement('div');
                div.setAttribute('class', 'glass');
                ui.glass = $(div);

                $('body').append(div);
            }


            // All the magnifying will happen on "mousemove"

            var mouseMove = function (e) {
                var $el = $(this);

                // Container offset relative to document
                var magnify_offset = cur_img.offset();

                // Mouse position relative to container
                // pageX/pageY - container's offsetLeft/offetTop
                mouse.x = e.pageX - magnify_offset.left;
                mouse.y = e.pageY - magnify_offset.top;

                // The Magnifying glass should only show up when the mouse is inside
                // It is important to note that attaching mouseout and then hiding
                // the glass wont work cuz mouse will never be out due to the glass
                // being inside the parent and having a higher z-index (positioned above)
                if (
                    mouse.x < cur_img.width() &&
                    mouse.y < cur_img.height() &&
                    mouse.x > 0 &&
                    mouse.y > 0
                ) {

                    magnify(e);
                }
                else {
                    ui.glass.fadeOut(100);
                }

                return;
            };

            var magnify = function (e) {

                // The background position of div.glass will be
                // changed according to the position
                // of the mouse over the img.magniflier
                //
                // So we will get the ratio of the pixel
                // under the mouse with respect
                // to the image and use that to position the
                // large image inside the magnifying glass

                var rx = Math.round(mouse.x / cur_img.width() * native_width - ui.glass.width() / 2) * -1;
                var ry = Math.round(mouse.y / cur_img.height() * native_height - ui.glass.height() / 2) * -1;
                var bg_pos = rx + "px " + ry + "px";

                // Calculate pos for magnifying glass
                //
                // Easy Logic: Deduct half of width/height
                // from mouse pos.

                // var glass_left = mouse.x - ui.glass.width() / 2;
                // var glass_top  = mouse.y - ui.glass.height() / 2;
                var glass_left = e.pageX - ui.glass.width() / 2;
                var glass_top = e.pageY - ui.glass.height() / 2;
                //console.log(glass_left, glass_top, bg_pos)
                // Now, if you hover on the image, you should
                // see the magnifying glass in action
                ui.glass.css({
                    left: glass_left,
                    top: glass_top,
                    backgroundPosition: bg_pos
                });

                return;
            };

            $('.magniflier').on('mousemove', function () {
                ui.glass.fadeIn(200);

                cur_img = $(this);

                var large_img_loaded = cur_img.data('large-img-loaded');
                var src = cur_img.data('large') || cur_img.attr('src');

                // Set large-img-loaded to true
                // cur_img.data('large-img-loaded', true)

                if (src) {
                    ui.glass.css({
                        'background-image': 'url(' + src + ')',
                        'background-repeat': 'no-repeat'
                    });
                }

                // When the user hovers on the image, the script will first calculate
                // the native dimensions if they don't exist. Only after the native dimensions
                // are available, the script will show the zoomed version.
                //if(!native_width && !native_height) {

                if (!cur_img.data('native_width')) {
                    // This will create a new image object with the same image as that in .small
                    // We cannot directly get the dimensions from .small because of the
                    // width specified to 200px in the html. To get the actual dimensions we have
                    // created this image object.
                    var image_object = new Image();

                    image_object.onload = function () {
                        // This code is wrapped in the .load function which is important.
                        // width and height of the object would return 0 if accessed before
                        // the image gets loaded.
                        native_width = image_object.width;
                        native_height = image_object.height;

                        cur_img.data('native_width', native_width);
                        cur_img.data('native_height', native_height);

                        mouseMove.apply(this, arguments);

                        ui.glass.on('mousemove', mouseMove);
                    };


                    image_object.src = src;

                    return;
                } else {

                    native_width = cur_img.data('native_width');
                    native_height = cur_img.data('native_height');
                }

                mouseMove.apply(this, arguments);

                ui.glass.on('mousemove', mouseMove);
            });

            ui.glass.on('mouseout', function () {
                ui.glass.off('mousemove', mouseMove);
            });

        });</script>
</body>
